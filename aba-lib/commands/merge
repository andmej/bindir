#!/bin/sh
# Copyright (C) 2004 Aaron Bentley
#
# See the file "COPYING" for further information about
# the copyright and warranty status of this work.
unset ABAFILTER
export ABAFILTER

. "$abadir/aba-lib"
cmd_exec()
{
  aba_merge_source $1
  aba_no_changes
  for source in $sourcever; do
  echo "* merge source $sourcetype: $source"
  tla star-merge $source;
  if [ $? -ne 0 ]; then 
    tla log-for-merge >> $(tla make-log)
    echo "Problems encountered during merge (see aba conflicts)" >&2
    exit 1;
  fi
  if ! tla changes > /dev/null; then
    aba emlog
    exit 0
  else
    echo "* tree is already up to date with $source"
  fi
  done
}
cmd_desc()
{
  echo '                       merge : star-merge with =partner-versions, then edit log'
}
cmd_help()
{
cat <<EOH
performs an automated star-merge
usage: $abaname merge [version]

Selects the source version from (in order of selection):
1. The supplied version
2. The contents of =partner-versions in {arch}
3. The contents of ++merge-source in the project tree root
4. The tag-source of the project tree, as determined from the patch-logs

It will not perform the merge if there are uncommitted changes in the tree.

If there are conflicts, it will warn that problems were encountered.

Otherwise, if the merge changed the tree, it will do $abaname emlog to produce
a log message.

If the merge was successfully applied, but did not change the tree, it will say so.

++merge-source or =partner-versions may contain multiple merge sources,
separated by whitespace.  In this case, each source will be tried in order,
stopping at the first merge that actually changes the tree.

EOH
}
cmd_ext_help()
{
  echo -n
}
aba_run "$@"
# arch-tag: merge by Aaron Bentley (11:15 Jan 26, 2004)
